Terminals unused in grammar

   '/'


Grammar

    0 $accept: pgm $end

    1 pgm: classes statements

    2 classes: %empty
    3        | classes class

    4 class: CLASS ident '(' formals ')' opt_extends '{' statements methods '}'

    5 opt_extends: EXTENDS ident
    6            | %empty

    7 formals: %empty
    8        | formals formal

    9 formal: ident ':' ident
   10       | ',' ident ':' ident

   11 methods: %empty
   12        | methods method

   13 method: DEF ident '(' formals ')' return_type statement_block

   14 return_type: ':' ident
   15            | %empty

   16 statements: statements statement
   17           | %empty

   18 statement_block: '{' statements '}'

   19 statement: WHILE expr statement_block
   20          | IF expr statement_block opt_elif_parts

   21 opt_elif_parts: ELIF expr statement_block opt_elif_parts
   22               | ELSE statement_block
   23               | %empty

   24 statement: l_expr '=' expr ';'
   25          | l_expr ':' ident '=' expr ';'
   26          | RETURN expr ';'
   27          | expr ';'
   28          | typecase

   29 typecase: TYPECASE expr '{' type_alternatives '}'

   30 type_alternatives: %empty
   31                  | type_alternatives ',' type_alternative

   32 type_alternative: ident ':' ident statement_block

   33 l_expr: IDENT
   34       | expr '.' ident

   35 expr: '(' expr ')'
   36     | l_expr
   37     | STRING_LIT
   38     | INT_LIT
   39     | expr '*' expr
   40     | expr '+' expr
   41     | expr '-' expr
   42     | '-' expr
   43     | expr EQUALS expr
   44     | expr ATMOST expr
   45     | expr ATLEAST expr
   46     | expr '<' expr
   47     | expr '>' expr
   48     | expr AND expr
   49     | expr OR expr
   50     | NOT expr
   51     | expr '.' ident '(' actual_args ')'

   52 actual_args: %empty
   53            | actual_args_nonempty

   54 actual_args_nonempty: actual_args_nonempty ',' expr
   55                     | expr

   56 expr: ident '(' actual_args ')'

   57 ident: IDENT


Terminals, with rules where they appear

$end (0) 0
'(' (40) 4 13 35 51 56
')' (41) 4 13 35 51 56
'*' (42) 39
'+' (43) 40
',' (44) 10 31 54
'-' (45) 41 42
'.' (46) 34 51
'/' (47)
':' (58) 9 10 14 25 32
';' (59) 24 25 26 27
'<' (60) 46
'=' (61) 24 25
'>' (62) 47
'{' (123) 4 18 29
'}' (125) 4 18 29
error (256)
CLASS (258) 4
DEF (259) 13
EXTENDS (260) 5
IF (261) 20
ELIF (262) 21
ELSE (263) 22
WHILE (264) 19
RETURN (265) 26
TYPECASE (266) 29
ATLEAST (267) 45
ATMOST (268) 44
EQUALS (269) 43
AND (270) 48
OR (271) 49
NOT (272) 50
IDENT <str> (273) 33 57
INT_LIT <num> (274) 38
STRING_LIT <str> (275) 37
NEG (276)


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
pgm <node> (38)
    on left: 1, on right: 0
classes <classes> (39)
    on left: 2 3, on right: 1 3
class <klass> (40)
    on left: 4, on right: 3
opt_extends <ident> (41)
    on left: 5 6, on right: 4
formals <formals> (42)
    on left: 7 8, on right: 4 8 13
formal <formal> (43)
    on left: 9 10, on right: 8
methods <methods> (44)
    on left: 11 12, on right: 4 12
method <method> (45)
    on left: 13, on right: 12
return_type <ident> (46)
    on left: 14 15, on right: 13
statements <block> (47)
    on left: 16 17, on right: 1 4 16 18
statement_block <block> (48)
    on left: 18, on right: 13 19 20 21 22 32
statement <statement> (49)
    on left: 19 20 24 25 26 27 28, on right: 16
opt_elif_parts <block> (50)
    on left: 21 22 23, on right: 20 21
typecase <typecase> (51)
    on left: 29, on right: 28
type_alternatives <type_alternatives> (52)
    on left: 30 31, on right: 29 31
type_alternative <type_alternative> (53)
    on left: 32, on right: 31
l_expr <l_expr> (54)
    on left: 33 34, on right: 24 25 36
expr <expr> (55)
    on left: 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 56,
    on right: 19 20 21 24 25 26 27 29 34 35 39 40 41 42 43 44 45 46
    47 48 49 50 51 54 55
actual_args <actuals> (56)
    on left: 52 53, on right: 51 56
actual_args_nonempty <actuals> (57)
    on left: 54 55, on right: 53 54
ident <ident> (58)
    on left: 57, on right: 4 5 9 10 13 14 25 32 34 51 56


State 0

    0 $accept: . pgm $end
    1 pgm: . classes statements
    2 classes: . %empty
    3        | . classes class

    $default  reduce using rule 2 (classes)

    pgm      go to state 1
    classes  go to state 2


State 1

    0 $accept: pgm . $end

    $end  shift, and go to state 3


State 2

    1 pgm: classes . statements
    3 classes: classes . class
    4 class: . CLASS ident '(' formals ')' opt_extends '{' statements methods '}'
   16 statements: . statements statement
   17           | . %empty  [$end, IF, WHILE, RETURN, TYPECASE, NOT, IDENT, INT_LIT, STRING_LIT, '-', '(']

    CLASS  shift, and go to state 4

    $default  reduce using rule 17 (statements)

    class       go to state 5
    statements  go to state 6


State 3

    0 $accept: pgm $end .

    $default  accept


State 4

    4 class: CLASS . ident '(' formals ')' opt_extends '{' statements methods '}'
   57 ident: . IDENT

    IDENT  shift, and go to state 7

    ident  go to state 8


State 5

    3 classes: classes class .

    $default  reduce using rule 3 (classes)


State 6

    1 pgm: classes statements .  [$end]
   16 statements: statements . statement
   19 statement: . WHILE expr statement_block
   20          | . IF expr statement_block opt_elif_parts
   24          | . l_expr '=' expr ';'
   25          | . l_expr ':' ident '=' expr ';'
   26          | . RETURN expr ';'
   27          | . expr ';'
   28          | . typecase
   29 typecase: . TYPECASE expr '{' type_alternatives '}'
   33 l_expr: . IDENT
   34       | . expr '.' ident
   35 expr: . '(' expr ')'
   36     | . l_expr
   37     | . STRING_LIT
   38     | . INT_LIT
   39     | . expr '*' expr
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . '-' expr
   43     | . expr EQUALS expr
   44     | . expr ATMOST expr
   45     | . expr ATLEAST expr
   46     | . expr '<' expr
   47     | . expr '>' expr
   48     | . expr AND expr
   49     | . expr OR expr
   50     | . NOT expr
   51     | . expr '.' ident '(' actual_args ')'
   56     | . ident '(' actual_args ')'
   57 ident: . IDENT

    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    RETURN      shift, and go to state 11
    TYPECASE    shift, and go to state 12
    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    $default  reduce using rule 1 (pgm)

    statement  go to state 19
    typecase   go to state 20
    l_expr     go to state 21
    expr       go to state 22
    ident      go to state 23


State 7

   57 ident: IDENT .

    $default  reduce using rule 57 (ident)


State 8

    4 class: CLASS ident . '(' formals ')' opt_extends '{' statements methods '}'

    '('  shift, and go to state 24


State 9

   20 statement: IF . expr statement_block opt_elif_parts
   33 l_expr: . IDENT
   34       | . expr '.' ident
   35 expr: . '(' expr ')'
   36     | . l_expr
   37     | . STRING_LIT
   38     | . INT_LIT
   39     | . expr '*' expr
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . '-' expr
   43     | . expr EQUALS expr
   44     | . expr ATMOST expr
   45     | . expr ATLEAST expr
   46     | . expr '<' expr
   47     | . expr '>' expr
   48     | . expr AND expr
   49     | . expr OR expr
   50     | . NOT expr
   51     | . expr '.' ident '(' actual_args ')'
   56     | . ident '(' actual_args ')'
   57 ident: . IDENT

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 25
    expr    go to state 26
    ident   go to state 23


State 10

   19 statement: WHILE . expr statement_block
   33 l_expr: . IDENT
   34       | . expr '.' ident
   35 expr: . '(' expr ')'
   36     | . l_expr
   37     | . STRING_LIT
   38     | . INT_LIT
   39     | . expr '*' expr
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . '-' expr
   43     | . expr EQUALS expr
   44     | . expr ATMOST expr
   45     | . expr ATLEAST expr
   46     | . expr '<' expr
   47     | . expr '>' expr
   48     | . expr AND expr
   49     | . expr OR expr
   50     | . NOT expr
   51     | . expr '.' ident '(' actual_args ')'
   56     | . ident '(' actual_args ')'
   57 ident: . IDENT

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 25
    expr    go to state 27
    ident   go to state 23


State 11

   26 statement: RETURN . expr ';'
   33 l_expr: . IDENT
   34       | . expr '.' ident
   35 expr: . '(' expr ')'
   36     | . l_expr
   37     | . STRING_LIT
   38     | . INT_LIT
   39     | . expr '*' expr
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . '-' expr
   43     | . expr EQUALS expr
   44     | . expr ATMOST expr
   45     | . expr ATLEAST expr
   46     | . expr '<' expr
   47     | . expr '>' expr
   48     | . expr AND expr
   49     | . expr OR expr
   50     | . NOT expr
   51     | . expr '.' ident '(' actual_args ')'
   56     | . ident '(' actual_args ')'
   57 ident: . IDENT

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 25
    expr    go to state 28
    ident   go to state 23


State 12

   29 typecase: TYPECASE . expr '{' type_alternatives '}'
   33 l_expr: . IDENT
   34       | . expr '.' ident
   35 expr: . '(' expr ')'
   36     | . l_expr
   37     | . STRING_LIT
   38     | . INT_LIT
   39     | . expr '*' expr
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . '-' expr
   43     | . expr EQUALS expr
   44     | . expr ATMOST expr
   45     | . expr ATLEAST expr
   46     | . expr '<' expr
   47     | . expr '>' expr
   48     | . expr AND expr
   49     | . expr OR expr
   50     | . NOT expr
   51     | . expr '.' ident '(' actual_args ')'
   56     | . ident '(' actual_args ')'
   57 ident: . IDENT

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 25
    expr    go to state 29
    ident   go to state 23


State 13

   33 l_expr: . IDENT
   34       | . expr '.' ident
   35 expr: . '(' expr ')'
   36     | . l_expr
   37     | . STRING_LIT
   38     | . INT_LIT
   39     | . expr '*' expr
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . '-' expr
   43     | . expr EQUALS expr
   44     | . expr ATMOST expr
   45     | . expr ATLEAST expr
   46     | . expr '<' expr
   47     | . expr '>' expr
   48     | . expr AND expr
   49     | . expr OR expr
   50     | . NOT expr
   50     | NOT . expr
   51     | . expr '.' ident '(' actual_args ')'
   56     | . ident '(' actual_args ')'
   57 ident: . IDENT

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 25
    expr    go to state 30
    ident   go to state 23


State 14

   33 l_expr: IDENT .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', '*', '.', ')', '{', ':', ',', '=', ';']
   57 ident: IDENT .  ['(']

    '('       reduce using rule 57 (ident)
    $default  reduce using rule 33 (l_expr)


State 15

   38 expr: INT_LIT .

    $default  reduce using rule 38 (expr)


State 16

   37 expr: STRING_LIT .

    $default  reduce using rule 37 (expr)


State 17

   33 l_expr: . IDENT
   34       | . expr '.' ident
   35 expr: . '(' expr ')'
   36     | . l_expr
   37     | . STRING_LIT
   38     | . INT_LIT
   39     | . expr '*' expr
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . '-' expr
   42     | '-' . expr
   43     | . expr EQUALS expr
   44     | . expr ATMOST expr
   45     | . expr ATLEAST expr
   46     | . expr '<' expr
   47     | . expr '>' expr
   48     | . expr AND expr
   49     | . expr OR expr
   50     | . NOT expr
   51     | . expr '.' ident '(' actual_args ')'
   56     | . ident '(' actual_args ')'
   57 ident: . IDENT

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 25
    expr    go to state 31
    ident   go to state 23


State 18

   33 l_expr: . IDENT
   34       | . expr '.' ident
   35 expr: . '(' expr ')'
   35     | '(' . expr ')'
   36     | . l_expr
   37     | . STRING_LIT
   38     | . INT_LIT
   39     | . expr '*' expr
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . '-' expr
   43     | . expr EQUALS expr
   44     | . expr ATMOST expr
   45     | . expr ATLEAST expr
   46     | . expr '<' expr
   47     | . expr '>' expr
   48     | . expr AND expr
   49     | . expr OR expr
   50     | . NOT expr
   51     | . expr '.' ident '(' actual_args ')'
   56     | . ident '(' actual_args ')'
   57 ident: . IDENT

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 25
    expr    go to state 32
    ident   go to state 23


State 19

   16 statements: statements statement .

    $default  reduce using rule 16 (statements)


State 20

   28 statement: typecase .

    $default  reduce using rule 28 (statement)


State 21

   24 statement: l_expr . '=' expr ';'
   25          | l_expr . ':' ident '=' expr ';'
   36 expr: l_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', '*', '.', ';']

    ':'  shift, and go to state 33
    '='  shift, and go to state 34

    $default  reduce using rule 36 (expr)


State 22

   27 statement: expr . ';'
   34 l_expr: expr . '.' ident
   39 expr: expr . '*' expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   43     | expr . EQUALS expr
   44     | expr . ATMOST expr
   45     | expr . ATLEAST expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . AND expr
   49     | expr . OR expr
   51     | expr . '.' ident '(' actual_args ')'

    ATLEAST  shift, and go to state 35
    ATMOST   shift, and go to state 36
    EQUALS   shift, and go to state 37
    AND      shift, and go to state 38
    OR       shift, and go to state 39
    '>'      shift, and go to state 40
    '<'      shift, and go to state 41
    '+'      shift, and go to state 42
    '-'      shift, and go to state 43
    '*'      shift, and go to state 44
    '.'      shift, and go to state 45
    ';'      shift, and go to state 46


State 23

   56 expr: ident . '(' actual_args ')'

    '('  shift, and go to state 47


State 24

    4 class: CLASS ident '(' . formals ')' opt_extends '{' statements methods '}'
    7 formals: . %empty
    8        | . formals formal

    $default  reduce using rule 7 (formals)

    formals  go to state 48


State 25

   36 expr: l_expr .

    $default  reduce using rule 36 (expr)


State 26

   18 statement_block: . '{' statements '}'
   20 statement: IF expr . statement_block opt_elif_parts
   34 l_expr: expr . '.' ident
   39 expr: expr . '*' expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   43     | expr . EQUALS expr
   44     | expr . ATMOST expr
   45     | expr . ATLEAST expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . AND expr
   49     | expr . OR expr
   51     | expr . '.' ident '(' actual_args ')'

    ATLEAST  shift, and go to state 35
    ATMOST   shift, and go to state 36
    EQUALS   shift, and go to state 37
    AND      shift, and go to state 38
    OR       shift, and go to state 39
    '>'      shift, and go to state 40
    '<'      shift, and go to state 41
    '+'      shift, and go to state 42
    '-'      shift, and go to state 43
    '*'      shift, and go to state 44
    '.'      shift, and go to state 45
    '{'      shift, and go to state 49

    statement_block  go to state 50


State 27

   18 statement_block: . '{' statements '}'
   19 statement: WHILE expr . statement_block
   34 l_expr: expr . '.' ident
   39 expr: expr . '*' expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   43     | expr . EQUALS expr
   44     | expr . ATMOST expr
   45     | expr . ATLEAST expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . AND expr
   49     | expr . OR expr
   51     | expr . '.' ident '(' actual_args ')'

    ATLEAST  shift, and go to state 35
    ATMOST   shift, and go to state 36
    EQUALS   shift, and go to state 37
    AND      shift, and go to state 38
    OR       shift, and go to state 39
    '>'      shift, and go to state 40
    '<'      shift, and go to state 41
    '+'      shift, and go to state 42
    '-'      shift, and go to state 43
    '*'      shift, and go to state 44
    '.'      shift, and go to state 45
    '{'      shift, and go to state 49

    statement_block  go to state 51


State 28

   26 statement: RETURN expr . ';'
   34 l_expr: expr . '.' ident
   39 expr: expr . '*' expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   43     | expr . EQUALS expr
   44     | expr . ATMOST expr
   45     | expr . ATLEAST expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . AND expr
   49     | expr . OR expr
   51     | expr . '.' ident '(' actual_args ')'

    ATLEAST  shift, and go to state 35
    ATMOST   shift, and go to state 36
    EQUALS   shift, and go to state 37
    AND      shift, and go to state 38
    OR       shift, and go to state 39
    '>'      shift, and go to state 40
    '<'      shift, and go to state 41
    '+'      shift, and go to state 42
    '-'      shift, and go to state 43
    '*'      shift, and go to state 44
    '.'      shift, and go to state 45
    ';'      shift, and go to state 52


State 29

   29 typecase: TYPECASE expr . '{' type_alternatives '}'
   34 l_expr: expr . '.' ident
   39 expr: expr . '*' expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   43     | expr . EQUALS expr
   44     | expr . ATMOST expr
   45     | expr . ATLEAST expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . AND expr
   49     | expr . OR expr
   51     | expr . '.' ident '(' actual_args ')'

    ATLEAST  shift, and go to state 35
    ATMOST   shift, and go to state 36
    EQUALS   shift, and go to state 37
    AND      shift, and go to state 38
    OR       shift, and go to state 39
    '>'      shift, and go to state 40
    '<'      shift, and go to state 41
    '+'      shift, and go to state 42
    '-'      shift, and go to state 43
    '*'      shift, and go to state 44
    '.'      shift, and go to state 45
    '{'      shift, and go to state 53


State 30

   34 l_expr: expr . '.' ident
   39 expr: expr . '*' expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   43     | expr . EQUALS expr
   44     | expr . ATMOST expr
   45     | expr . ATLEAST expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | NOT expr .  [AND, OR, ')', '{', ',', ';']
   51     | expr . '.' ident '(' actual_args ')'

    ATLEAST  shift, and go to state 35
    ATMOST   shift, and go to state 36
    EQUALS   shift, and go to state 37
    '>'      shift, and go to state 40
    '<'      shift, and go to state 41
    '+'      shift, and go to state 42
    '-'      shift, and go to state 43
    '*'      shift, and go to state 44
    '.'      shift, and go to state 45

    $default  reduce using rule 50 (expr)

    Conflict between rule 50 and token ATLEAST resolved as shift (NOT < ATLEAST).
    Conflict between rule 50 and token ATMOST resolved as shift (NOT < ATMOST).
    Conflict between rule 50 and token EQUALS resolved as shift (NOT < EQUALS).
    Conflict between rule 50 and token AND resolved as reduce (AND < NOT).
    Conflict between rule 50 and token OR resolved as reduce (OR < NOT).
    Conflict between rule 50 and token '>' resolved as shift (NOT < '>').
    Conflict between rule 50 and token '<' resolved as shift (NOT < '<').
    Conflict between rule 50 and token '+' resolved as shift (NOT < '+').
    Conflict between rule 50 and token '-' resolved as shift (NOT < '-').
    Conflict between rule 50 and token '*' resolved as shift (NOT < '*').
    Conflict between rule 50 and token '.' resolved as shift (NOT < '.').


State 31

   34 l_expr: expr . '.' ident
   39 expr: expr . '*' expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | '-' expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', '*', ')', '{', ',', ';']
   43     | expr . EQUALS expr
   44     | expr . ATMOST expr
   45     | expr . ATLEAST expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . AND expr
   49     | expr . OR expr
   51     | expr . '.' ident '(' actual_args ')'

    '.'  shift, and go to state 45

    $default  reduce using rule 42 (expr)

    Conflict between rule 42 and token ATLEAST resolved as reduce (ATLEAST < NEG).
    Conflict between rule 42 and token ATMOST resolved as reduce (ATMOST < NEG).
    Conflict between rule 42 and token EQUALS resolved as reduce (EQUALS < NEG).
    Conflict between rule 42 and token AND resolved as reduce (AND < NEG).
    Conflict between rule 42 and token OR resolved as reduce (OR < NEG).
    Conflict between rule 42 and token '>' resolved as reduce ('>' < NEG).
    Conflict between rule 42 and token '<' resolved as reduce ('<' < NEG).
    Conflict between rule 42 and token '+' resolved as reduce ('+' < NEG).
    Conflict between rule 42 and token '-' resolved as reduce ('-' < NEG).
    Conflict between rule 42 and token '*' resolved as reduce ('*' < NEG).
    Conflict between rule 42 and token '.' resolved as shift (NEG < '.').


State 32

   34 l_expr: expr . '.' ident
   35 expr: '(' expr . ')'
   39     | expr . '*' expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   43     | expr . EQUALS expr
   44     | expr . ATMOST expr
   45     | expr . ATLEAST expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . AND expr
   49     | expr . OR expr
   51     | expr . '.' ident '(' actual_args ')'

    ATLEAST  shift, and go to state 35
    ATMOST   shift, and go to state 36
    EQUALS   shift, and go to state 37
    AND      shift, and go to state 38
    OR       shift, and go to state 39
    '>'      shift, and go to state 40
    '<'      shift, and go to state 41
    '+'      shift, and go to state 42
    '-'      shift, and go to state 43
    '*'      shift, and go to state 44
    '.'      shift, and go to state 45
    ')'      shift, and go to state 54


State 33

   25 statement: l_expr ':' . ident '=' expr ';'
   57 ident: . IDENT

    IDENT  shift, and go to state 7

    ident  go to state 55


State 34

   24 statement: l_expr '=' . expr ';'
   33 l_expr: . IDENT
   34       | . expr '.' ident
   35 expr: . '(' expr ')'
   36     | . l_expr
   37     | . STRING_LIT
   38     | . INT_LIT
   39     | . expr '*' expr
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . '-' expr
   43     | . expr EQUALS expr
   44     | . expr ATMOST expr
   45     | . expr ATLEAST expr
   46     | . expr '<' expr
   47     | . expr '>' expr
   48     | . expr AND expr
   49     | . expr OR expr
   50     | . NOT expr
   51     | . expr '.' ident '(' actual_args ')'
   56     | . ident '(' actual_args ')'
   57 ident: . IDENT

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 25
    expr    go to state 56
    ident   go to state 23


State 35

   33 l_expr: . IDENT
   34       | . expr '.' ident
   35 expr: . '(' expr ')'
   36     | . l_expr
   37     | . STRING_LIT
   38     | . INT_LIT
   39     | . expr '*' expr
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . '-' expr
   43     | . expr EQUALS expr
   44     | . expr ATMOST expr
   45     | . expr ATLEAST expr
   45     | expr ATLEAST . expr
   46     | . expr '<' expr
   47     | . expr '>' expr
   48     | . expr AND expr
   49     | . expr OR expr
   50     | . NOT expr
   51     | . expr '.' ident '(' actual_args ')'
   56     | . ident '(' actual_args ')'
   57 ident: . IDENT

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 25
    expr    go to state 57
    ident   go to state 23


State 36

   33 l_expr: . IDENT
   34       | . expr '.' ident
   35 expr: . '(' expr ')'
   36     | . l_expr
   37     | . STRING_LIT
   38     | . INT_LIT
   39     | . expr '*' expr
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . '-' expr
   43     | . expr EQUALS expr
   44     | . expr ATMOST expr
   44     | expr ATMOST . expr
   45     | . expr ATLEAST expr
   46     | . expr '<' expr
   47     | . expr '>' expr
   48     | . expr AND expr
   49     | . expr OR expr
   50     | . NOT expr
   51     | . expr '.' ident '(' actual_args ')'
   56     | . ident '(' actual_args ')'
   57 ident: . IDENT

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 25
    expr    go to state 58
    ident   go to state 23


State 37

   33 l_expr: . IDENT
   34       | . expr '.' ident
   35 expr: . '(' expr ')'
   36     | . l_expr
   37     | . STRING_LIT
   38     | . INT_LIT
   39     | . expr '*' expr
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . '-' expr
   43     | . expr EQUALS expr
   43     | expr EQUALS . expr
   44     | . expr ATMOST expr
   45     | . expr ATLEAST expr
   46     | . expr '<' expr
   47     | . expr '>' expr
   48     | . expr AND expr
   49     | . expr OR expr
   50     | . NOT expr
   51     | . expr '.' ident '(' actual_args ')'
   56     | . ident '(' actual_args ')'
   57 ident: . IDENT

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 25
    expr    go to state 59
    ident   go to state 23


State 38

   33 l_expr: . IDENT
   34       | . expr '.' ident
   35 expr: . '(' expr ')'
   36     | . l_expr
   37     | . STRING_LIT
   38     | . INT_LIT
   39     | . expr '*' expr
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . '-' expr
   43     | . expr EQUALS expr
   44     | . expr ATMOST expr
   45     | . expr ATLEAST expr
   46     | . expr '<' expr
   47     | . expr '>' expr
   48     | . expr AND expr
   48     | expr AND . expr
   49     | . expr OR expr
   50     | . NOT expr
   51     | . expr '.' ident '(' actual_args ')'
   56     | . ident '(' actual_args ')'
   57 ident: . IDENT

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 25
    expr    go to state 60
    ident   go to state 23


State 39

   33 l_expr: . IDENT
   34       | . expr '.' ident
   35 expr: . '(' expr ')'
   36     | . l_expr
   37     | . STRING_LIT
   38     | . INT_LIT
   39     | . expr '*' expr
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . '-' expr
   43     | . expr EQUALS expr
   44     | . expr ATMOST expr
   45     | . expr ATLEAST expr
   46     | . expr '<' expr
   47     | . expr '>' expr
   48     | . expr AND expr
   49     | . expr OR expr
   49     | expr OR . expr
   50     | . NOT expr
   51     | . expr '.' ident '(' actual_args ')'
   56     | . ident '(' actual_args ')'
   57 ident: . IDENT

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 25
    expr    go to state 61
    ident   go to state 23


State 40

   33 l_expr: . IDENT
   34       | . expr '.' ident
   35 expr: . '(' expr ')'
   36     | . l_expr
   37     | . STRING_LIT
   38     | . INT_LIT
   39     | . expr '*' expr
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . '-' expr
   43     | . expr EQUALS expr
   44     | . expr ATMOST expr
   45     | . expr ATLEAST expr
   46     | . expr '<' expr
   47     | . expr '>' expr
   47     | expr '>' . expr
   48     | . expr AND expr
   49     | . expr OR expr
   50     | . NOT expr
   51     | . expr '.' ident '(' actual_args ')'
   56     | . ident '(' actual_args ')'
   57 ident: . IDENT

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 25
    expr    go to state 62
    ident   go to state 23


State 41

   33 l_expr: . IDENT
   34       | . expr '.' ident
   35 expr: . '(' expr ')'
   36     | . l_expr
   37     | . STRING_LIT
   38     | . INT_LIT
   39     | . expr '*' expr
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . '-' expr
   43     | . expr EQUALS expr
   44     | . expr ATMOST expr
   45     | . expr ATLEAST expr
   46     | . expr '<' expr
   46     | expr '<' . expr
   47     | . expr '>' expr
   48     | . expr AND expr
   49     | . expr OR expr
   50     | . NOT expr
   51     | . expr '.' ident '(' actual_args ')'
   56     | . ident '(' actual_args ')'
   57 ident: . IDENT

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 25
    expr    go to state 63
    ident   go to state 23


State 42

   33 l_expr: . IDENT
   34       | . expr '.' ident
   35 expr: . '(' expr ')'
   36     | . l_expr
   37     | . STRING_LIT
   38     | . INT_LIT
   39     | . expr '*' expr
   40     | . expr '+' expr
   40     | expr '+' . expr
   41     | . expr '-' expr
   42     | . '-' expr
   43     | . expr EQUALS expr
   44     | . expr ATMOST expr
   45     | . expr ATLEAST expr
   46     | . expr '<' expr
   47     | . expr '>' expr
   48     | . expr AND expr
   49     | . expr OR expr
   50     | . NOT expr
   51     | . expr '.' ident '(' actual_args ')'
   56     | . ident '(' actual_args ')'
   57 ident: . IDENT

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 25
    expr    go to state 64
    ident   go to state 23


State 43

   33 l_expr: . IDENT
   34       | . expr '.' ident
   35 expr: . '(' expr ')'
   36     | . l_expr
   37     | . STRING_LIT
   38     | . INT_LIT
   39     | . expr '*' expr
   40     | . expr '+' expr
   41     | . expr '-' expr
   41     | expr '-' . expr
   42     | . '-' expr
   43     | . expr EQUALS expr
   44     | . expr ATMOST expr
   45     | . expr ATLEAST expr
   46     | . expr '<' expr
   47     | . expr '>' expr
   48     | . expr AND expr
   49     | . expr OR expr
   50     | . NOT expr
   51     | . expr '.' ident '(' actual_args ')'
   56     | . ident '(' actual_args ')'
   57 ident: . IDENT

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 25
    expr    go to state 65
    ident   go to state 23


State 44

   33 l_expr: . IDENT
   34       | . expr '.' ident
   35 expr: . '(' expr ')'
   36     | . l_expr
   37     | . STRING_LIT
   38     | . INT_LIT
   39     | . expr '*' expr
   39     | expr '*' . expr
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . '-' expr
   43     | . expr EQUALS expr
   44     | . expr ATMOST expr
   45     | . expr ATLEAST expr
   46     | . expr '<' expr
   47     | . expr '>' expr
   48     | . expr AND expr
   49     | . expr OR expr
   50     | . NOT expr
   51     | . expr '.' ident '(' actual_args ')'
   56     | . ident '(' actual_args ')'
   57 ident: . IDENT

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 25
    expr    go to state 66
    ident   go to state 23


State 45

   34 l_expr: expr '.' . ident
   51 expr: expr '.' . ident '(' actual_args ')'
   57 ident: . IDENT

    IDENT  shift, and go to state 7

    ident  go to state 67


State 46

   27 statement: expr ';' .

    $default  reduce using rule 27 (statement)


State 47

   33 l_expr: . IDENT
   34       | . expr '.' ident
   35 expr: . '(' expr ')'
   36     | . l_expr
   37     | . STRING_LIT
   38     | . INT_LIT
   39     | . expr '*' expr
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . '-' expr
   43     | . expr EQUALS expr
   44     | . expr ATMOST expr
   45     | . expr ATLEAST expr
   46     | . expr '<' expr
   47     | . expr '>' expr
   48     | . expr AND expr
   49     | . expr OR expr
   50     | . NOT expr
   51     | . expr '.' ident '(' actual_args ')'
   52 actual_args: . %empty  [')']
   53            | . actual_args_nonempty
   54 actual_args_nonempty: . actual_args_nonempty ',' expr
   55                     | . expr
   56 expr: . ident '(' actual_args ')'
   56     | ident '(' . actual_args ')'
   57 ident: . IDENT

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    $default  reduce using rule 52 (actual_args)

    l_expr                go to state 25
    expr                  go to state 68
    actual_args           go to state 69
    actual_args_nonempty  go to state 70
    ident                 go to state 23


State 48

    4 class: CLASS ident '(' formals . ')' opt_extends '{' statements methods '}'
    8 formals: formals . formal
    9 formal: . ident ':' ident
   10       | . ',' ident ':' ident
   57 ident: . IDENT

    IDENT  shift, and go to state 7
    ')'    shift, and go to state 71
    ','    shift, and go to state 72

    formal  go to state 73
    ident   go to state 74


State 49

   16 statements: . statements statement
   17           | . %empty
   18 statement_block: '{' . statements '}'

    $default  reduce using rule 17 (statements)

    statements  go to state 75


State 50

   20 statement: IF expr statement_block . opt_elif_parts
   21 opt_elif_parts: . ELIF expr statement_block opt_elif_parts
   22               | . ELSE statement_block
   23               | . %empty  [$end, DEF, IF, WHILE, RETURN, TYPECASE, NOT, IDENT, INT_LIT, STRING_LIT, '-', '(', '}']

    ELIF  shift, and go to state 76
    ELSE  shift, and go to state 77

    $default  reduce using rule 23 (opt_elif_parts)

    opt_elif_parts  go to state 78


State 51

   19 statement: WHILE expr statement_block .

    $default  reduce using rule 19 (statement)


State 52

   26 statement: RETURN expr ';' .

    $default  reduce using rule 26 (statement)


State 53

   29 typecase: TYPECASE expr '{' . type_alternatives '}'
   30 type_alternatives: . %empty
   31                  | . type_alternatives ',' type_alternative

    $default  reduce using rule 30 (type_alternatives)

    type_alternatives  go to state 79


State 54

   35 expr: '(' expr ')' .

    $default  reduce using rule 35 (expr)


State 55

   25 statement: l_expr ':' ident . '=' expr ';'

    '='  shift, and go to state 80


State 56

   24 statement: l_expr '=' expr . ';'
   34 l_expr: expr . '.' ident
   39 expr: expr . '*' expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   43     | expr . EQUALS expr
   44     | expr . ATMOST expr
   45     | expr . ATLEAST expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . AND expr
   49     | expr . OR expr
   51     | expr . '.' ident '(' actual_args ')'

    ATLEAST  shift, and go to state 35
    ATMOST   shift, and go to state 36
    EQUALS   shift, and go to state 37
    AND      shift, and go to state 38
    OR       shift, and go to state 39
    '>'      shift, and go to state 40
    '<'      shift, and go to state 41
    '+'      shift, and go to state 42
    '-'      shift, and go to state 43
    '*'      shift, and go to state 44
    '.'      shift, and go to state 45
    ';'      shift, and go to state 81


State 57

   34 l_expr: expr . '.' ident
   39 expr: expr . '*' expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   43     | expr . EQUALS expr
   44     | expr . ATMOST expr
   45     | expr . ATLEAST expr
   45     | expr ATLEAST expr .  [ATMOST, AND, OR, '>', ')', '{', ',', ';']
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . AND expr
   49     | expr . OR expr
   51     | expr . '.' ident '(' actual_args ')'

    EQUALS  shift, and go to state 37
    '+'     shift, and go to state 42
    '-'     shift, and go to state 43
    '*'     shift, and go to state 44
    '.'     shift, and go to state 45

    ATLEAST  error (nonassociative)
    '<'      error (nonassociative)

    $default  reduce using rule 45 (expr)

    Conflict between rule 45 and token ATLEAST resolved as an error (%nonassoc ATLEAST).
    Conflict between rule 45 and token ATMOST resolved as reduce (ATMOST < ATLEAST).
    Conflict between rule 45 and token EQUALS resolved as shift (ATLEAST < EQUALS).
    Conflict between rule 45 and token AND resolved as reduce (AND < ATLEAST).
    Conflict between rule 45 and token OR resolved as reduce (OR < ATLEAST).
    Conflict between rule 45 and token '>' resolved as reduce ('>' < ATLEAST).
    Conflict between rule 45 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 45 and token '+' resolved as shift (ATLEAST < '+').
    Conflict between rule 45 and token '-' resolved as shift (ATLEAST < '-').
    Conflict between rule 45 and token '*' resolved as shift (ATLEAST < '*').
    Conflict between rule 45 and token '.' resolved as shift (ATLEAST < '.').


State 58

   34 l_expr: expr . '.' ident
   39 expr: expr . '*' expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   43     | expr . EQUALS expr
   44     | expr . ATMOST expr
   44     | expr ATMOST expr .  [AND, OR, ')', '{', ',', ';']
   45     | expr . ATLEAST expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . AND expr
   49     | expr . OR expr
   51     | expr . '.' ident '(' actual_args ')'

    ATLEAST  shift, and go to state 35
    EQUALS   shift, and go to state 37
    '<'      shift, and go to state 41
    '+'      shift, and go to state 42
    '-'      shift, and go to state 43
    '*'      shift, and go to state 44
    '.'      shift, and go to state 45

    ATMOST  error (nonassociative)
    '>'     error (nonassociative)

    $default  reduce using rule 44 (expr)

    Conflict between rule 44 and token ATLEAST resolved as shift (ATMOST < ATLEAST).
    Conflict between rule 44 and token ATMOST resolved as an error (%nonassoc ATMOST).
    Conflict between rule 44 and token EQUALS resolved as shift (ATMOST < EQUALS).
    Conflict between rule 44 and token AND resolved as reduce (AND < ATMOST).
    Conflict between rule 44 and token OR resolved as reduce (OR < ATMOST).
    Conflict between rule 44 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 44 and token '<' resolved as shift (ATMOST < '<').
    Conflict between rule 44 and token '+' resolved as shift (ATMOST < '+').
    Conflict between rule 44 and token '-' resolved as shift (ATMOST < '-').
    Conflict between rule 44 and token '*' resolved as shift (ATMOST < '*').
    Conflict between rule 44 and token '.' resolved as shift (ATMOST < '.').


State 59

   34 l_expr: expr . '.' ident
   39 expr: expr . '*' expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   43     | expr . EQUALS expr
   43     | expr EQUALS expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', ')', '{', ',', ';']
   44     | expr . ATMOST expr
   45     | expr . ATLEAST expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . AND expr
   49     | expr . OR expr
   51     | expr . '.' ident '(' actual_args ')'

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '.'  shift, and go to state 45

    $default  reduce using rule 43 (expr)

    Conflict between rule 43 and token ATLEAST resolved as reduce (ATLEAST < EQUALS).
    Conflict between rule 43 and token ATMOST resolved as reduce (ATMOST < EQUALS).
    Conflict between rule 43 and token EQUALS resolved as reduce (%left EQUALS).
    Conflict between rule 43 and token AND resolved as reduce (AND < EQUALS).
    Conflict between rule 43 and token OR resolved as reduce (OR < EQUALS).
    Conflict between rule 43 and token '>' resolved as reduce ('>' < EQUALS).
    Conflict between rule 43 and token '<' resolved as reduce ('<' < EQUALS).
    Conflict between rule 43 and token '+' resolved as shift (EQUALS < '+').
    Conflict between rule 43 and token '-' resolved as shift (EQUALS < '-').
    Conflict between rule 43 and token '*' resolved as shift (EQUALS < '*').
    Conflict between rule 43 and token '.' resolved as shift (EQUALS < '.').


State 60

   34 l_expr: expr . '.' ident
   39 expr: expr . '*' expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   43     | expr . EQUALS expr
   44     | expr . ATMOST expr
   45     | expr . ATLEAST expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . AND expr
   48     | expr AND expr .  [AND, OR, ')', '{', ',', ';']
   49     | expr . OR expr
   51     | expr . '.' ident '(' actual_args ')'

    ATLEAST  shift, and go to state 35
    ATMOST   shift, and go to state 36
    EQUALS   shift, and go to state 37
    '>'      shift, and go to state 40
    '<'      shift, and go to state 41
    '+'      shift, and go to state 42
    '-'      shift, and go to state 43
    '*'      shift, and go to state 44
    '.'      shift, and go to state 45

    $default  reduce using rule 48 (expr)

    Conflict between rule 48 and token ATLEAST resolved as shift (AND < ATLEAST).
    Conflict between rule 48 and token ATMOST resolved as shift (AND < ATMOST).
    Conflict between rule 48 and token EQUALS resolved as shift (AND < EQUALS).
    Conflict between rule 48 and token AND resolved as reduce (%left AND).
    Conflict between rule 48 and token OR resolved as reduce (%left OR).
    Conflict between rule 48 and token '>' resolved as shift (AND < '>').
    Conflict between rule 48 and token '<' resolved as shift (AND < '<').
    Conflict between rule 48 and token '+' resolved as shift (AND < '+').
    Conflict between rule 48 and token '-' resolved as shift (AND < '-').
    Conflict between rule 48 and token '*' resolved as shift (AND < '*').
    Conflict between rule 48 and token '.' resolved as shift (AND < '.').


State 61

   34 l_expr: expr . '.' ident
   39 expr: expr . '*' expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   43     | expr . EQUALS expr
   44     | expr . ATMOST expr
   45     | expr . ATLEAST expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . AND expr
   49     | expr . OR expr
   49     | expr OR expr .  [AND, OR, ')', '{', ',', ';']
   51     | expr . '.' ident '(' actual_args ')'

    ATLEAST  shift, and go to state 35
    ATMOST   shift, and go to state 36
    EQUALS   shift, and go to state 37
    '>'      shift, and go to state 40
    '<'      shift, and go to state 41
    '+'      shift, and go to state 42
    '-'      shift, and go to state 43
    '*'      shift, and go to state 44
    '.'      shift, and go to state 45

    $default  reduce using rule 49 (expr)

    Conflict between rule 49 and token ATLEAST resolved as shift (OR < ATLEAST).
    Conflict between rule 49 and token ATMOST resolved as shift (OR < ATMOST).
    Conflict between rule 49 and token EQUALS resolved as shift (OR < EQUALS).
    Conflict between rule 49 and token AND resolved as reduce (%left AND).
    Conflict between rule 49 and token OR resolved as reduce (%left OR).
    Conflict between rule 49 and token '>' resolved as shift (OR < '>').
    Conflict between rule 49 and token '<' resolved as shift (OR < '<').
    Conflict between rule 49 and token '+' resolved as shift (OR < '+').
    Conflict between rule 49 and token '-' resolved as shift (OR < '-').
    Conflict between rule 49 and token '*' resolved as shift (OR < '*').
    Conflict between rule 49 and token '.' resolved as shift (OR < '.').


State 62

   34 l_expr: expr . '.' ident
   39 expr: expr . '*' expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   43     | expr . EQUALS expr
   44     | expr . ATMOST expr
   45     | expr . ATLEAST expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   47     | expr '>' expr .  [AND, OR, ')', '{', ',', ';']
   48     | expr . AND expr
   49     | expr . OR expr
   51     | expr . '.' ident '(' actual_args ')'

    ATLEAST  shift, and go to state 35
    EQUALS   shift, and go to state 37
    '<'      shift, and go to state 41
    '+'      shift, and go to state 42
    '-'      shift, and go to state 43
    '*'      shift, and go to state 44
    '.'      shift, and go to state 45

    ATMOST  error (nonassociative)
    '>'     error (nonassociative)

    $default  reduce using rule 47 (expr)

    Conflict between rule 47 and token ATLEAST resolved as shift ('>' < ATLEAST).
    Conflict between rule 47 and token ATMOST resolved as an error (%nonassoc ATMOST).
    Conflict between rule 47 and token EQUALS resolved as shift ('>' < EQUALS).
    Conflict between rule 47 and token AND resolved as reduce (AND < '>').
    Conflict between rule 47 and token OR resolved as reduce (OR < '>').
    Conflict between rule 47 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 47 and token '<' resolved as shift ('>' < '<').
    Conflict between rule 47 and token '+' resolved as shift ('>' < '+').
    Conflict between rule 47 and token '-' resolved as shift ('>' < '-').
    Conflict between rule 47 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 47 and token '.' resolved as shift ('>' < '.').


State 63

   34 l_expr: expr . '.' ident
   39 expr: expr . '*' expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   43     | expr . EQUALS expr
   44     | expr . ATMOST expr
   45     | expr . ATLEAST expr
   46     | expr . '<' expr
   46     | expr '<' expr .  [ATMOST, AND, OR, '>', ')', '{', ',', ';']
   47     | expr . '>' expr
   48     | expr . AND expr
   49     | expr . OR expr
   51     | expr . '.' ident '(' actual_args ')'

    EQUALS  shift, and go to state 37
    '+'     shift, and go to state 42
    '-'     shift, and go to state 43
    '*'     shift, and go to state 44
    '.'     shift, and go to state 45

    ATLEAST  error (nonassociative)
    '<'      error (nonassociative)

    $default  reduce using rule 46 (expr)

    Conflict between rule 46 and token ATLEAST resolved as an error (%nonassoc ATLEAST).
    Conflict between rule 46 and token ATMOST resolved as reduce (ATMOST < '<').
    Conflict between rule 46 and token EQUALS resolved as shift ('<' < EQUALS).
    Conflict between rule 46 and token AND resolved as reduce (AND < '<').
    Conflict between rule 46 and token OR resolved as reduce (OR < '<').
    Conflict between rule 46 and token '>' resolved as reduce ('>' < '<').
    Conflict between rule 46 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 46 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 46 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 46 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 46 and token '.' resolved as shift ('<' < '.').


State 64

   34 l_expr: expr . '.' ident
   39 expr: expr . '*' expr
   40     | expr . '+' expr
   40     | expr '+' expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', ')', '{', ',', ';']
   41     | expr . '-' expr
   43     | expr . EQUALS expr
   44     | expr . ATMOST expr
   45     | expr . ATLEAST expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . AND expr
   49     | expr . OR expr
   51     | expr . '.' ident '(' actual_args ')'

    '*'  shift, and go to state 44
    '.'  shift, and go to state 45

    $default  reduce using rule 40 (expr)

    Conflict between rule 40 and token ATLEAST resolved as reduce (ATLEAST < '+').
    Conflict between rule 40 and token ATMOST resolved as reduce (ATMOST < '+').
    Conflict between rule 40 and token EQUALS resolved as reduce (EQUALS < '+').
    Conflict between rule 40 and token AND resolved as reduce (AND < '+').
    Conflict between rule 40 and token OR resolved as reduce (OR < '+').
    Conflict between rule 40 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 40 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 40 and token '+' resolved as reduce (%left '+').
    Conflict between rule 40 and token '-' resolved as reduce (%left '-').
    Conflict between rule 40 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 40 and token '.' resolved as shift ('+' < '.').


State 65

   34 l_expr: expr . '.' ident
   39 expr: expr . '*' expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   41     | expr '-' expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', ')', '{', ',', ';']
   43     | expr . EQUALS expr
   44     | expr . ATMOST expr
   45     | expr . ATLEAST expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . AND expr
   49     | expr . OR expr
   51     | expr . '.' ident '(' actual_args ')'

    '*'  shift, and go to state 44
    '.'  shift, and go to state 45

    $default  reduce using rule 41 (expr)

    Conflict between rule 41 and token ATLEAST resolved as reduce (ATLEAST < '-').
    Conflict between rule 41 and token ATMOST resolved as reduce (ATMOST < '-').
    Conflict between rule 41 and token EQUALS resolved as reduce (EQUALS < '-').
    Conflict between rule 41 and token AND resolved as reduce (AND < '-').
    Conflict between rule 41 and token OR resolved as reduce (OR < '-').
    Conflict between rule 41 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 41 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 41 and token '+' resolved as reduce (%left '+').
    Conflict between rule 41 and token '-' resolved as reduce (%left '-').
    Conflict between rule 41 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 41 and token '.' resolved as shift ('-' < '.').


State 66

   34 l_expr: expr . '.' ident
   39 expr: expr . '*' expr
   39     | expr '*' expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', '*', ')', '{', ',', ';']
   40     | expr . '+' expr
   41     | expr . '-' expr
   43     | expr . EQUALS expr
   44     | expr . ATMOST expr
   45     | expr . ATLEAST expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . AND expr
   49     | expr . OR expr
   51     | expr . '.' ident '(' actual_args ')'

    '.'  shift, and go to state 45

    $default  reduce using rule 39 (expr)

    Conflict between rule 39 and token ATLEAST resolved as reduce (ATLEAST < '*').
    Conflict between rule 39 and token ATMOST resolved as reduce (ATMOST < '*').
    Conflict between rule 39 and token EQUALS resolved as reduce (EQUALS < '*').
    Conflict between rule 39 and token AND resolved as reduce (AND < '*').
    Conflict between rule 39 and token OR resolved as reduce (OR < '*').
    Conflict between rule 39 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 39 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 39 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 39 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 39 and token '*' resolved as reduce (%left '*').
    Conflict between rule 39 and token '.' resolved as shift ('*' < '.').


State 67

   34 l_expr: expr '.' ident .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', '*', '.', ')', '{', ':', ',', '=', ';']
   51 expr: expr '.' ident . '(' actual_args ')'

    '('  shift, and go to state 82

    $default  reduce using rule 34 (l_expr)


State 68

   34 l_expr: expr . '.' ident
   39 expr: expr . '*' expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   43     | expr . EQUALS expr
   44     | expr . ATMOST expr
   45     | expr . ATLEAST expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . AND expr
   49     | expr . OR expr
   51     | expr . '.' ident '(' actual_args ')'
   55 actual_args_nonempty: expr .  [')', ',']

    ATLEAST  shift, and go to state 35
    ATMOST   shift, and go to state 36
    EQUALS   shift, and go to state 37
    AND      shift, and go to state 38
    OR       shift, and go to state 39
    '>'      shift, and go to state 40
    '<'      shift, and go to state 41
    '+'      shift, and go to state 42
    '-'      shift, and go to state 43
    '*'      shift, and go to state 44
    '.'      shift, and go to state 45

    $default  reduce using rule 55 (actual_args_nonempty)


State 69

   56 expr: ident '(' actual_args . ')'

    ')'  shift, and go to state 83


State 70

   53 actual_args: actual_args_nonempty .  [')']
   54 actual_args_nonempty: actual_args_nonempty . ',' expr

    ','  shift, and go to state 84

    $default  reduce using rule 53 (actual_args)


State 71

    4 class: CLASS ident '(' formals ')' . opt_extends '{' statements methods '}'
    5 opt_extends: . EXTENDS ident
    6            | . %empty  ['{']

    EXTENDS  shift, and go to state 85

    $default  reduce using rule 6 (opt_extends)

    opt_extends  go to state 86


State 72

   10 formal: ',' . ident ':' ident
   57 ident: . IDENT

    IDENT  shift, and go to state 7

    ident  go to state 87


State 73

    8 formals: formals formal .

    $default  reduce using rule 8 (formals)


State 74

    9 formal: ident . ':' ident

    ':'  shift, and go to state 88


State 75

   16 statements: statements . statement
   18 statement_block: '{' statements . '}'
   19 statement: . WHILE expr statement_block
   20          | . IF expr statement_block opt_elif_parts
   24          | . l_expr '=' expr ';'
   25          | . l_expr ':' ident '=' expr ';'
   26          | . RETURN expr ';'
   27          | . expr ';'
   28          | . typecase
   29 typecase: . TYPECASE expr '{' type_alternatives '}'
   33 l_expr: . IDENT
   34       | . expr '.' ident
   35 expr: . '(' expr ')'
   36     | . l_expr
   37     | . STRING_LIT
   38     | . INT_LIT
   39     | . expr '*' expr
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . '-' expr
   43     | . expr EQUALS expr
   44     | . expr ATMOST expr
   45     | . expr ATLEAST expr
   46     | . expr '<' expr
   47     | . expr '>' expr
   48     | . expr AND expr
   49     | . expr OR expr
   50     | . NOT expr
   51     | . expr '.' ident '(' actual_args ')'
   56     | . ident '(' actual_args ')'
   57 ident: . IDENT

    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    RETURN      shift, and go to state 11
    TYPECASE    shift, and go to state 12
    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18
    '}'         shift, and go to state 89

    statement  go to state 19
    typecase   go to state 20
    l_expr     go to state 21
    expr       go to state 22
    ident      go to state 23


State 76

   21 opt_elif_parts: ELIF . expr statement_block opt_elif_parts
   33 l_expr: . IDENT
   34       | . expr '.' ident
   35 expr: . '(' expr ')'
   36     | . l_expr
   37     | . STRING_LIT
   38     | . INT_LIT
   39     | . expr '*' expr
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . '-' expr
   43     | . expr EQUALS expr
   44     | . expr ATMOST expr
   45     | . expr ATLEAST expr
   46     | . expr '<' expr
   47     | . expr '>' expr
   48     | . expr AND expr
   49     | . expr OR expr
   50     | . NOT expr
   51     | . expr '.' ident '(' actual_args ')'
   56     | . ident '(' actual_args ')'
   57 ident: . IDENT

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 25
    expr    go to state 90
    ident   go to state 23


State 77

   18 statement_block: . '{' statements '}'
   22 opt_elif_parts: ELSE . statement_block

    '{'  shift, and go to state 49

    statement_block  go to state 91


State 78

   20 statement: IF expr statement_block opt_elif_parts .

    $default  reduce using rule 20 (statement)


State 79

   29 typecase: TYPECASE expr '{' type_alternatives . '}'
   31 type_alternatives: type_alternatives . ',' type_alternative

    '}'  shift, and go to state 92
    ','  shift, and go to state 93


State 80

   25 statement: l_expr ':' ident '=' . expr ';'
   33 l_expr: . IDENT
   34       | . expr '.' ident
   35 expr: . '(' expr ')'
   36     | . l_expr
   37     | . STRING_LIT
   38     | . INT_LIT
   39     | . expr '*' expr
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . '-' expr
   43     | . expr EQUALS expr
   44     | . expr ATMOST expr
   45     | . expr ATLEAST expr
   46     | . expr '<' expr
   47     | . expr '>' expr
   48     | . expr AND expr
   49     | . expr OR expr
   50     | . NOT expr
   51     | . expr '.' ident '(' actual_args ')'
   56     | . ident '(' actual_args ')'
   57 ident: . IDENT

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 25
    expr    go to state 94
    ident   go to state 23


State 81

   24 statement: l_expr '=' expr ';' .

    $default  reduce using rule 24 (statement)


State 82

   33 l_expr: . IDENT
   34       | . expr '.' ident
   35 expr: . '(' expr ')'
   36     | . l_expr
   37     | . STRING_LIT
   38     | . INT_LIT
   39     | . expr '*' expr
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . '-' expr
   43     | . expr EQUALS expr
   44     | . expr ATMOST expr
   45     | . expr ATLEAST expr
   46     | . expr '<' expr
   47     | . expr '>' expr
   48     | . expr AND expr
   49     | . expr OR expr
   50     | . NOT expr
   51     | . expr '.' ident '(' actual_args ')'
   51     | expr '.' ident '(' . actual_args ')'
   52 actual_args: . %empty  [')']
   53            | . actual_args_nonempty
   54 actual_args_nonempty: . actual_args_nonempty ',' expr
   55                     | . expr
   56 expr: . ident '(' actual_args ')'
   57 ident: . IDENT

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    $default  reduce using rule 52 (actual_args)

    l_expr                go to state 25
    expr                  go to state 68
    actual_args           go to state 95
    actual_args_nonempty  go to state 70
    ident                 go to state 23


State 83

   56 expr: ident '(' actual_args ')' .

    $default  reduce using rule 56 (expr)


State 84

   33 l_expr: . IDENT
   34       | . expr '.' ident
   35 expr: . '(' expr ')'
   36     | . l_expr
   37     | . STRING_LIT
   38     | . INT_LIT
   39     | . expr '*' expr
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . '-' expr
   43     | . expr EQUALS expr
   44     | . expr ATMOST expr
   45     | . expr ATLEAST expr
   46     | . expr '<' expr
   47     | . expr '>' expr
   48     | . expr AND expr
   49     | . expr OR expr
   50     | . NOT expr
   51     | . expr '.' ident '(' actual_args ')'
   54 actual_args_nonempty: actual_args_nonempty ',' . expr
   56 expr: . ident '(' actual_args ')'
   57 ident: . IDENT

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 25
    expr    go to state 96
    ident   go to state 23


State 85

    5 opt_extends: EXTENDS . ident
   57 ident: . IDENT

    IDENT  shift, and go to state 7

    ident  go to state 97


State 86

    4 class: CLASS ident '(' formals ')' opt_extends . '{' statements methods '}'

    '{'  shift, and go to state 98


State 87

   10 formal: ',' ident . ':' ident

    ':'  shift, and go to state 99


State 88

    9 formal: ident ':' . ident
   57 ident: . IDENT

    IDENT  shift, and go to state 7

    ident  go to state 100


State 89

   18 statement_block: '{' statements '}' .

    $default  reduce using rule 18 (statement_block)


State 90

   18 statement_block: . '{' statements '}'
   21 opt_elif_parts: ELIF expr . statement_block opt_elif_parts
   34 l_expr: expr . '.' ident
   39 expr: expr . '*' expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   43     | expr . EQUALS expr
   44     | expr . ATMOST expr
   45     | expr . ATLEAST expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . AND expr
   49     | expr . OR expr
   51     | expr . '.' ident '(' actual_args ')'

    ATLEAST  shift, and go to state 35
    ATMOST   shift, and go to state 36
    EQUALS   shift, and go to state 37
    AND      shift, and go to state 38
    OR       shift, and go to state 39
    '>'      shift, and go to state 40
    '<'      shift, and go to state 41
    '+'      shift, and go to state 42
    '-'      shift, and go to state 43
    '*'      shift, and go to state 44
    '.'      shift, and go to state 45
    '{'      shift, and go to state 49

    statement_block  go to state 101


State 91

   22 opt_elif_parts: ELSE statement_block .

    $default  reduce using rule 22 (opt_elif_parts)


State 92

   29 typecase: TYPECASE expr '{' type_alternatives '}' .

    $default  reduce using rule 29 (typecase)


State 93

   31 type_alternatives: type_alternatives ',' . type_alternative
   32 type_alternative: . ident ':' ident statement_block
   57 ident: . IDENT

    IDENT  shift, and go to state 7

    type_alternative  go to state 102
    ident             go to state 103


State 94

   25 statement: l_expr ':' ident '=' expr . ';'
   34 l_expr: expr . '.' ident
   39 expr: expr . '*' expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   43     | expr . EQUALS expr
   44     | expr . ATMOST expr
   45     | expr . ATLEAST expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . AND expr
   49     | expr . OR expr
   51     | expr . '.' ident '(' actual_args ')'

    ATLEAST  shift, and go to state 35
    ATMOST   shift, and go to state 36
    EQUALS   shift, and go to state 37
    AND      shift, and go to state 38
    OR       shift, and go to state 39
    '>'      shift, and go to state 40
    '<'      shift, and go to state 41
    '+'      shift, and go to state 42
    '-'      shift, and go to state 43
    '*'      shift, and go to state 44
    '.'      shift, and go to state 45
    ';'      shift, and go to state 104


State 95

   51 expr: expr '.' ident '(' actual_args . ')'

    ')'  shift, and go to state 105


State 96

   34 l_expr: expr . '.' ident
   39 expr: expr . '*' expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   43     | expr . EQUALS expr
   44     | expr . ATMOST expr
   45     | expr . ATLEAST expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . AND expr
   49     | expr . OR expr
   51     | expr . '.' ident '(' actual_args ')'
   54 actual_args_nonempty: actual_args_nonempty ',' expr .  [')', ',']

    ATLEAST  shift, and go to state 35
    ATMOST   shift, and go to state 36
    EQUALS   shift, and go to state 37
    AND      shift, and go to state 38
    OR       shift, and go to state 39
    '>'      shift, and go to state 40
    '<'      shift, and go to state 41
    '+'      shift, and go to state 42
    '-'      shift, and go to state 43
    '*'      shift, and go to state 44
    '.'      shift, and go to state 45

    $default  reduce using rule 54 (actual_args_nonempty)


State 97

    5 opt_extends: EXTENDS ident .

    $default  reduce using rule 5 (opt_extends)


State 98

    4 class: CLASS ident '(' formals ')' opt_extends '{' . statements methods '}'
   16 statements: . statements statement
   17           | . %empty

    $default  reduce using rule 17 (statements)

    statements  go to state 106


State 99

   10 formal: ',' ident ':' . ident
   57 ident: . IDENT

    IDENT  shift, and go to state 7

    ident  go to state 107


State 100

    9 formal: ident ':' ident .

    $default  reduce using rule 9 (formal)


State 101

   21 opt_elif_parts: . ELIF expr statement_block opt_elif_parts
   21               | ELIF expr statement_block . opt_elif_parts
   22               | . ELSE statement_block
   23               | . %empty  [$end, DEF, IF, WHILE, RETURN, TYPECASE, NOT, IDENT, INT_LIT, STRING_LIT, '-', '(', '}']

    ELIF  shift, and go to state 76
    ELSE  shift, and go to state 77

    $default  reduce using rule 23 (opt_elif_parts)

    opt_elif_parts  go to state 108


State 102

   31 type_alternatives: type_alternatives ',' type_alternative .

    $default  reduce using rule 31 (type_alternatives)


State 103

   32 type_alternative: ident . ':' ident statement_block

    ':'  shift, and go to state 109


State 104

   25 statement: l_expr ':' ident '=' expr ';' .

    $default  reduce using rule 25 (statement)


State 105

   51 expr: expr '.' ident '(' actual_args ')' .

    $default  reduce using rule 51 (expr)


State 106

    4 class: CLASS ident '(' formals ')' opt_extends '{' statements . methods '}'
   11 methods: . %empty  [DEF, '}']
   12        | . methods method
   16 statements: statements . statement
   19 statement: . WHILE expr statement_block
   20          | . IF expr statement_block opt_elif_parts
   24          | . l_expr '=' expr ';'
   25          | . l_expr ':' ident '=' expr ';'
   26          | . RETURN expr ';'
   27          | . expr ';'
   28          | . typecase
   29 typecase: . TYPECASE expr '{' type_alternatives '}'
   33 l_expr: . IDENT
   34       | . expr '.' ident
   35 expr: . '(' expr ')'
   36     | . l_expr
   37     | . STRING_LIT
   38     | . INT_LIT
   39     | . expr '*' expr
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . '-' expr
   43     | . expr EQUALS expr
   44     | . expr ATMOST expr
   45     | . expr ATLEAST expr
   46     | . expr '<' expr
   47     | . expr '>' expr
   48     | . expr AND expr
   49     | . expr OR expr
   50     | . NOT expr
   51     | . expr '.' ident '(' actual_args ')'
   56     | . ident '(' actual_args ')'
   57 ident: . IDENT

    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    RETURN      shift, and go to state 11
    TYPECASE    shift, and go to state 12
    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    $default  reduce using rule 11 (methods)

    methods    go to state 110
    statement  go to state 19
    typecase   go to state 20
    l_expr     go to state 21
    expr       go to state 22
    ident      go to state 23


State 107

   10 formal: ',' ident ':' ident .

    $default  reduce using rule 10 (formal)


State 108

   21 opt_elif_parts: ELIF expr statement_block opt_elif_parts .

    $default  reduce using rule 21 (opt_elif_parts)


State 109

   32 type_alternative: ident ':' . ident statement_block
   57 ident: . IDENT

    IDENT  shift, and go to state 7

    ident  go to state 111


State 110

    4 class: CLASS ident '(' formals ')' opt_extends '{' statements methods . '}'
   12 methods: methods . method
   13 method: . DEF ident '(' formals ')' return_type statement_block

    DEF  shift, and go to state 112
    '}'  shift, and go to state 113

    method  go to state 114


State 111

   18 statement_block: . '{' statements '}'
   32 type_alternative: ident ':' ident . statement_block

    '{'  shift, and go to state 49

    statement_block  go to state 115


State 112

   13 method: DEF . ident '(' formals ')' return_type statement_block
   57 ident: . IDENT

    IDENT  shift, and go to state 7

    ident  go to state 116


State 113

    4 class: CLASS ident '(' formals ')' opt_extends '{' statements methods '}' .

    $default  reduce using rule 4 (class)


State 114

   12 methods: methods method .

    $default  reduce using rule 12 (methods)


State 115

   32 type_alternative: ident ':' ident statement_block .

    $default  reduce using rule 32 (type_alternative)


State 116

   13 method: DEF ident . '(' formals ')' return_type statement_block

    '('  shift, and go to state 117


State 117

    7 formals: . %empty
    8        | . formals formal
   13 method: DEF ident '(' . formals ')' return_type statement_block

    $default  reduce using rule 7 (formals)

    formals  go to state 118


State 118

    8 formals: formals . formal
    9 formal: . ident ':' ident
   10       | . ',' ident ':' ident
   13 method: DEF ident '(' formals . ')' return_type statement_block
   57 ident: . IDENT

    IDENT  shift, and go to state 7
    ')'    shift, and go to state 119
    ','    shift, and go to state 72

    formal  go to state 73
    ident   go to state 74


State 119

   13 method: DEF ident '(' formals ')' . return_type statement_block
   14 return_type: . ':' ident
   15            | . %empty  ['{']

    ':'  shift, and go to state 120

    $default  reduce using rule 15 (return_type)

    return_type  go to state 121


State 120

   14 return_type: ':' . ident
   57 ident: . IDENT

    IDENT  shift, and go to state 7

    ident  go to state 122


State 121

   13 method: DEF ident '(' formals ')' return_type . statement_block
   18 statement_block: . '{' statements '}'

    '{'  shift, and go to state 49

    statement_block  go to state 123


State 122

   14 return_type: ':' ident .

    $default  reduce using rule 14 (return_type)


State 123

   13 method: DEF ident '(' formals ')' return_type statement_block .

    $default  reduce using rule 13 (method)
